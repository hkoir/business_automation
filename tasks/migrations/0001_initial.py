# Generated by Django 5.1.2 on 2024-12-18 16:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(blank=True, max_length=20, null=True)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('priority', models.CharField(blank=True, choices=[('LOW', 'low'), ('medium', 'medium'), ('high', 'high'), ('critical', 'critical')], max_length=20, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('assigned_datetime', models.DateTimeField(auto_now_add=True)),
                ('due_datetime', models.DateTimeField(blank=True, null=True)),
                ('extension_request_datetime', models.DateTimeField(blank=True, null=True)),
                ('extension_approval_datetime', models.DateTimeField(blank=True, null=True)),
                ('extension_approval', models.BooleanField(blank=True, default=False, null=True)),
                ('extended_due_date', models.DateTimeField(blank=True, null=True)),
                ('assigned_number', models.FloatField(blank=True, default=0, null=True)),
                ('obtained_number', models.FloatField(blank=True, default=0, null=True)),
                ('obtained_score', models.FloatField(blank=True, default=0, null=True)),
                ('original_obtained_number', models.FloatField(blank=True, null=True)),
                ('original_obtained_score', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('OVERDUE', 'Overdue'), ('TIME_EXTENSION', 'Time extension')], default='PENDING', max_length=50, null=True)),
                ('assigned_to', models.CharField(blank=True, choices=[('member', 'member'), ('team', 'team')], max_length=20, null=True)),
                ('progress', models.FloatField(blank=True, default=0, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to_employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks_employee', to='core.employee')),
                ('task_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_manager', to='core.employee')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('can_create_task', 'Can create a task')],
            },
        ),
        migrations.CreateModel(
            name='PerformanceEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ev_id', models.CharField(blank=True, max_length=20, null=True)),
                ('evaluation_date', models.DateField(auto_now_add=True)),
                ('quantitative_score', models.FloatField(blank=True, default=0.0, null=True)),
                ('qualitative_score', models.FloatField(blank=True, default=0.0, null=True)),
                ('total_score', models.FloatField(blank=True, default=0.0, null=True)),
                ('obtained_quantitative_number', models.FloatField(blank=True, default=0.0, null=True)),
                ('obtained_qualitative_number', models.FloatField(blank=True, default=0.0, null=True)),
                ('total_obtained_number', models.FloatField(blank=True, default=0.0, null=True)),
                ('manager_given_quantitative_number', models.FloatField(blank=True, default=0.0, null=True)),
                ('manager_given_quantitative_score', models.FloatField(blank=True, default=0.0, null=True)),
                ('assigned_quantitative_number', models.FloatField(blank=True, default=0.0, null=True)),
                ('assigned_qualitative_number', models.FloatField(blank=True, default=0.0, null=True)),
                ('total_assigned_number', models.FloatField(blank=True, default=0.0, null=True)),
                ('quarter', models.CharField(blank=True, max_length=20, null=True)),
                ('month', models.CharField(blank=True, max_length=20, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.department')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employee_evaluation', to='core.employee')),
                ('position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.position')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_ev', to='tasks.task')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_id', models.CharField(editable=False, max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_manager', to='core.employee')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='assigned_to_team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks_team', to='tasks.team'),
        ),
        migrations.CreateModel(
            name='QualitativeEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ev_id', models.CharField(blank=True, max_length=20, null=True)),
                ('manager_given_quantitative_number', models.FloatField(blank=True, null=True)),
                ('manager_given_quantitative_score', models.FloatField(blank=True, null=True)),
                ('work_quality_score', models.FloatField(blank=True, default=0.0, null=True)),
                ('communication_quality_score', models.FloatField(blank=True, default=0.0, null=True)),
                ('teamwork_score', models.FloatField(blank=True, default=0.0, null=True)),
                ('initiative_score', models.FloatField(blank=True, default=0.0, null=True)),
                ('punctuality_score', models.FloatField(blank=True, default=0.0, null=True)),
                ('number_per_kpi', models.FloatField(blank=True, default=0.0, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('evaluation_date', models.DateField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employee_qualitative_evaluations', to='core.employee')),
                ('evaluator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='evaluator', to=settings.AUTH_USER_MODEL)),
                ('performance_evaluation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qualitative_evaluations', to='tasks.performanceevaluation')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_qualitative_evaluations', to='tasks.task')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_qualitative_evaluations', to='tasks.team')),
            ],
        ),
        migrations.AddField(
            model_name='performanceevaluation',
            name='team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_ev', to='tasks.team'),
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_team_leader', models.BooleanField(blank=True, default=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_memberships', to='core.employee')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='members', to='tasks.team')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
